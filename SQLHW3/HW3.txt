SET LINESIZE 230;
SET PAGESIZE 200;

--Q1--

SELECT GENRE, SUM(BEFORE_2015) AS "Before 2015",
SUM(YEAR_2015) AS "2015",
SUM(YEAR_2016) AS "2016",
SUM(YEAR_2017) AS "2017",
SUM(TOTAL) AS "GENRE TOTAL"
 FROM(
SELECT (CASE WHEN UPPER(GENRE) IS NULL THEN 'Year Total'
			 WHEN UPPER(GENRE) LIKE '%CLASSIC%' THEN 'Classic'
			 ELSE GENRE END) AS "GENRE",
SUM( (CASE WHEN YEAR<2015 THEN 1 ELSE 0 END)  ) "BEFORE_2015",
SUM( (CASE WHEN YEAR=2015 THEN 1 ELSE 0 END) ) "YEAR_2015",
SUM( (CASE WHEN YEAR=2016 THEN 1 ELSE 0 END) ) "YEAR_2016",
SUM( (CASE WHEN YEAR=2017 THEN 1 ELSE 0 END) ) "YEAR_2017",
COUNT(CATALOG_NUM) AS "TOTAL"
FROM (
		SELECT *
		FROM FILM 
		WHERE CATALOG_NUM IN (
							SELECT DISTINCT CATALOG_NUM 
							FROM INVENTORY)
		)
GROUP BY GROUPING SETS (GENRE, ()) )
GROUP BY GENRE
ORDER BY GENRE;

--Q2--
SELECT CITY, RANK() OVER (ORDER BY TIMES DESC) RANK
FROM (
SELECT CITY, COUNT(RENTAL_NUM) AS "TIMES"
FROM MEMBER LEFT OUTER JOIN RENTAL USING (MEMBER_ID) 
GROUP BY CITY);

--Q3--
SELECT GENRE,TITLE AS "TOP TITLE",TIMES
FROM (
	SELECT GENRE,TITLE,TIMES,RANK() OVER (PARTITION BY GENRE ORDER BY TIMES DESC) "RANK"  
	FROM (
		SELECT GENRE,TITLE,COUNT(RENTAL_NUM) AS "TIMES"
		FROM FILM LEFT OUTER JOIN INVENTORY USING (CATALOG_NUM)
				  LEFT OUTER JOIN RENTED_ITEM USING (FILM_ID)
		GROUP BY GENRE,TITLE)
)
WHERE RANK = 1;
	
--Q4--
SELECT SALES_REP_INFO,NVL(TIMES,0) AS TIMES,RANK() OVER (ORDER BY NVL(TIMES,0) DESC) AS "RANK"
FROM (
		SELECT EMP_ID||' '||FIRST_NAME||' '||LAST_NAME AS "SALES_REP_INFO",COUNT(RENTAL_NUM) AS "TIMES"
		FROM EMPLOYEE JOIN SALES_REP USING (EMP_ID)
					  LEFT OUTER JOIN RENTAL USING (EMP_ID)
		WHERE RENT_DATE>(SYSDATE-60)
		GROUP BY EMP_ID,FIRST_NAME,LAST_NAME)
RIGHT OUTER JOIN (SELECT EMP_ID||' '||FIRST_NAME||' '||LAST_NAME AS "SALES_REP_INFO"
				 FROM EMPLOYEE JOIN SALES_REP USING (EMP_ID) ) USING (SALES_REP_INFO);

--Q5--
SELECT * 
FROM(
	SELECT STORE_INFO,SALES_REP_INFO,TIMES,RANK() OVER (PARTITION BY STORE_INFO ORDER BY TIMES DESC) AS "RANK"
	FROM(
		SELECT STORE_NUM||' '||STORE_NAME AS "STORE_INFO",
		EMP_ID||' '||FIRST_NAME||' '||LAST_NAME AS "SALES_REP_INFO",
		COUNT(RENTAL_NUM) AS "TIMES"
		FROM STORE JOIN EMPLOYEE USING (STORE_NUM)
				   JOIN SALES_REP USING (EMP_ID)
		LEFT OUTER JOIN RENTAL USING (EMP_ID)
		GROUP BY STORE_NUM,STORE_NAME,EMP_ID,FIRST_NAME,LAST_NAME ) )
WHERE RANK = 1;

--Q6--
SELECT STORE_NUM,RENTED,TOTAL,
ROUND(RENTED/TOTAL*100,2)||'%' AS "PERCENT",
RANK() OVER (ORDER BY ROUND(RENTED/TOTAL*100,2)||'%' ) AS "RANK"
FROM 
(
SELECT STORE_NUM,COUNT(DISTINCT FILM_ID) AS "RENTED"
FROM STORE JOIN INVENTORY USING (STORE_NUM)
		   JOIN RENTED_ITEM USING (FILM_ID)
		   JOIN RENTAL USING (RENTAL_NUM)
WHERE RENT_DATE>SYSDATE-60
GROUP BY STORE_NUM)
JOIN (
SELECT STORE_NUM,COUNT(DISTINCT FILM_ID) AS "TOTAL"
FROM INVENTORY
GROUP BY STORE_NUM) USING (STORE_NUM);

--BONUS--
SELECT STORE_INFO,LOYAL,TOTAL,
ROUND(LOYAL/TOTAL*100,2)||'%' AS "LOYAL_PERCENTAGE"
FROM(
SELECT STORE.STORE_NUM||' '||STORE_NAME AS "STORE_INFO",
COUNT(DISTINCT RENTAL_NUM) AS "TOTAL"
FROM MEMBER JOIN RENTAL USING (MEMBER_ID)
			JOIN RENTED_ITEM USING (RENTAL_NUM)
		    JOIN INVENTORY USING (FILM_ID)
			JOIN STORE ON INVENTORY.STORE_NUM = STORE.STORE_NUM
GROUP BY STORE.STORE_NUM,STORE_NAME)
JOIN(
SELECT STORE.STORE_NUM||' '||STORE_NAME AS "STORE_INFO",
COUNT(DISTINCT RENTAL_NUM) AS "LOYAL"
FROM MEMBER JOIN RENTAL USING (MEMBER_ID)
			JOIN RENTED_ITEM USING (RENTAL_NUM)
		    JOIN INVENTORY USING (FILM_ID)
			JOIN STORE ON INVENTORY.STORE_NUM = STORE.STORE_NUM
WHERE MEMBER.STORE_NUM = INVENTORY.STORE_NUM
GROUP BY STORE.STORE_NUM,STORE_NAME) USING (STORE_INFO)
ORDER BY 2 DESC;

